beanboard.asm:
     1                          include "../../lib/beanboard.map"
../../lib/beanboard.map:
     1                          BAD_CMD_MSG                     = $03ED ; addr, local, , beanboard, , asm/messages_small.asm:7
     2                          BEANBOARD                       = $0001 ; const, local, , beanboard, , beanboard.asm:5
     3                          CMD_BUFFER                      = $F020 ; const, local, , beanboard, , asm/main.inc:9
     4                          CMD_W_NULL_MSG                  = $03FA ; addr, local, , beanboard, , asm/messages_small.asm:10
     5                          CONSOLE_STATUS                  = $F000 ; const, local, , beanboard, , asm/main.inc:5
     6                          CONSOLE_STATUS_BEANBOARD        = $0002 ; const, local, , beanboard, , asm/main.inc:23
     7                          CONSOLE_STATUS_USB              = $0001 ; const, local, , beanboard, , asm/main.inc:22
     8                          DEBOUNCE_DELAY                  = $4000 ; const, local, , beanboard, , asm/keymatrix.asm:1
     9                          ESC_B                           = $0008 ; const, local, , beanboard, , asm/escapestring.inc:5
    10                          ESC_E                           = $001B ; const, local, , beanboard, , asm/escapestring.inc:9
    11                          ESC_N                           = $000A ; const, local, , beanboard, , asm/escapestring.inc:7
    12                          ESC_R                           = $000D ; const, local, , beanboard, , asm/escapestring.inc:8
    13                          ESC_T                           = $0009 ; const, local, , beanboard, , asm/escapestring.inc:6
    14                          KEYSCAN_IN                      = $0003 ; const, local, , beanboard, , asm/main.inc:16
    15                          KEYSCAN_OUT                     = $0002 ; const, local, , beanboard, , asm/main.inc:15
    16                          KEY_MATRIX_BUFFER               = $F010 ; const, local, , beanboard, , asm/main.inc:7
    17                          LCD_BLINK_ON                    = $0001 ; const, local, , beanboard, , asm/HD44780LCD.inc:22
    18                          LCD_CLEAR_DISPLAY               = $0001 ; const, local, , beanboard, , asm/HD44780LCD.inc:2
    19                          LCD_CTRL                        = $0004 ; const, local, , beanboard, , asm/main.inc:17
    20                          LCD_CURSOR_ON                   = $0002 ; const, local, , beanboard, , asm/HD44780LCD.inc:20
    21                          LCD_DATA                        = $0005 ; const, local, , beanboard, , asm/main.inc:18
    22                          LCD_DATA_LEN_8                  = $0010 ; const, local, , beanboard, , asm/HD44780LCD.inc:32
    23                          LCD_DISPLAY_ON                  = $0004 ; const, local, , beanboard, , asm/HD44780LCD.inc:18
    24                          LCD_DISPLAY_ON_OFF_CONTROL      = $0008 ; const, local, , beanboard, , asm/HD44780LCD.inc:5
    25                          LCD_DISP_LINES_2                = $0008 ; const, local, , beanboard, , asm/HD44780LCD.inc:34
    26                          LCD_EOL_3                       = $0067 ; const, local, , beanboard, , asm/HD44780LCD.inc:51
    27                          LCD_FONT_8                      = $0000 ; const, local, , beanboard, , asm/HD44780LCD.inc:37
    28                          LCD_FUNCTION_SET                = $0020 ; const, local, , beanboard, , asm/HD44780LCD.inc:7
    29                          LCD_LINE_0_ADDR                 = $0000 ; const, local, , beanboard, , asm/HD44780LCD.inc:44
    30                          LCD_LINE_1_ADDR                 = $0040 ; const, local, , beanboard, , asm/HD44780LCD.inc:45
    31                          LCD_LINE_2_ADDR                 = $0014 ; const, local, , beanboard, , asm/HD44780LCD.inc:46
    32                          LCD_LINE_3_ADDR                 = $0054 ; const, local, , beanboard, , asm/HD44780LCD.inc:47
    33                          LCD_LINE_LEN                    = $0014 ; const, local, , beanboard, , asm/HD44780LCD.inc:39
    34                          LCD_NUM_LINES                   = $0004 ; const, local, , beanboard, , asm/HD44780LCD.inc:40
    35                          LCD_SET_DDRAM_ADDR              = $0080 ; const, local, , beanboard, , asm/HD44780LCD.inc:9
    36                          MARVIN                          = $00C6 ; addr, local, , beanboard, , asm/marvin.asm:9
    37                          MARVINORG                       = $0000 ; const, local, , beanboard, , beanboard.asm:0
    38                          MOD_KEY_SHIFT                   = $0001 ; const, local, , beanboard, , asm/keymatrix.asm:3
    39                          PROMPT                          = $00CF ; addr, local, , beanboard, , asm/marvin.asm:16
    40                          QUOTE                           = $0027 ; const, local, , beanboard, , asm/escapestring.inc:11
    41                          QWERTY_ALT                      = $0000 ; const, local, , beanboard, , asm/keymatrix.asm:151
    42                          QWERTY_CAPS                     = $0005 ; const, local, , beanboard, , asm/keymatrix.asm:157
    43                          QWERTY_CMD                      = $0000 ; const, local, , beanboard, , asm/keymatrix.asm:152
    44                          QWERTY_CTRL                     = $0000 ; const, local, , beanboard, , asm/keymatrix.asm:150
    45                          QWERTY_CURS_DOWN                = $0002 ; const, local, , beanboard, , asm/keymatrix.asm:154
    46                          QWERTY_CURS_LEFT                = $0003 ; const, local, , beanboard, , asm/keymatrix.asm:155
    47                          QWERTY_CURS_RIGHT               = $0004 ; const, local, , beanboard, , asm/keymatrix.asm:156
    48                          QWERTY_CURS_UP                  = $0001 ; const, local, , beanboard, , asm/keymatrix.asm:153
    49                          QWERTY_FN                       = $0000 ; const, local, , beanboard, , asm/keymatrix.asm:149
    50                          QWERTY_KEYMAP_L                 = $0344 ; addr, local, , beanboard, , asm/keymatrix.asm:159
    51                          QWERTY_KEYMAP_U                 = $0384 ; addr, local, , beanboard, , asm/keymatrix.asm:164
    52                          QWERTY_SHIFT                    = $0000 ; const, local, , beanboard, , asm/keymatrix.asm:148
    53                          RAMSTART                        = $8000 ; const, local, , beanboard, , asm/main.inc:2
    54                          SLASH                           = $005C ; const, local, , beanboard, , asm/escapestring.inc:10
    55                          STACK                           = $FFFF ; const, local, , beanboard, , asm/main.inc:11
    56                          UM245R_CTRL                     = $0000 ; const, local, , beanboard, , asm/main.inc:13
    57                          UM245R_DATA                     = $0001 ; const, local, , beanboard, , asm/main.inc:14
    58                          WARMSTART2                      = $0020 ; addr, local, , beanboard, , asm/main.asm:11
    59                          WARMSTART                       = $0010 ; addr, local, , beanboard, , asm/main.asm:8
    60                          WELCOME_MSG                     = $03C4 ; addr, local, , beanboard, , asm/messages_small.asm:1
    61                          __head                          = $0000 ; const, public, def, , ,
    62                          __size                          = $0403 ; const, public, def, , ,
    63                          __tail                          = $0403 ; const, public, def, , ,
    64                          _beanboard_console_init_usb     = $0083 ; addr, local, , beanboard, , asm/console.asm:106
    65                          _cmd_exec_df                    = $018D ; addr, local, , beanboard, , asm/marvin.asm:207
    66                          _cmd_execute                    = $017C ; addr, local, , beanboard, , asm/marvin.asm:188
    67                          _cmd_load                       = $0191 ; addr, local, , beanboard, , asm/marvin.asm:215
    68                          _cmd_load_data                  = $01B0 ; addr, local, , beanboard, , asm/marvin.asm:243
    69                          _cmd_load_end                   = $01BD ; addr, local, , beanboard, , asm/marvin.asm:262
    70                          _cmd_read                       = $0121 ; addr, local, , beanboard, , asm/marvin.asm:95
    71                          _cmd_read_byte                  = $0142 ; addr, local, , beanboard, , asm/marvin.asm:124
    72                          _cmd_read_row                   = $012E ; addr, local, , beanboard, , asm/marvin.asm:110
    73                          _cmd_write                      = $0157 ; addr, local, , beanboard, , asm/marvin.asm:147
    74                          _cmd_write_data                 = $0164 ; addr, local, , beanboard, , asm/marvin.asm:162
    75                          _cmd_write_end                  = $0170 ; addr, local, , beanboard, , asm/marvin.asm:176
    76                          _cmd_write_null                 = $0173 ; addr, local, , beanboard, , asm/marvin.asm:179
    77                          _colscan                        = $032F ; addr, local, , beanboard, , asm/keymatrix.asm:114
    78                          _colscanend                     = $0342 ; addr, local, , beanboard, , asm/keymatrix.asm:141
    79                          _colscanloop                    = $0333 ; addr, local, , beanboard, , asm/keymatrix.asm:121
    80                          _colscanloopnext                = $033C ; addr, local, , beanboard, , asm/keymatrix.asm:132
    81                          _debounce_delay                 = $0303 ; addr, local, , beanboard, , asm/keymatrix.asm:51
    82                          _delay_end                      = $030F ; addr, local, , beanboard, , asm/keymatrix.asm:61
    83                          _delay_loop                     = $0308 ; addr, local, , beanboard, , asm/keymatrix.asm:55
    84                          _do_usb_put                     = $00A6 ; addr, local, , beanboard, , asm/UM245R.asm:44
    85                          _get_cmd                        = $00D7 ; addr, local, , beanboard, , asm/marvin.asm:22
    86                          _get_cmd_end                    = $00FC ; addr, local, , beanboard, , asm/marvin.asm:60
    87                          _get_cmd_esc                    = $00F5 ; addr, local, , beanboard, , asm/marvin.asm:54
    88                          _hex_byte_val_zero              = $01DF ; addr, local, , beanboard, , asm/strings.asm:40
    89                          _hex_val_n                      = $01F1 ; addr, local, , beanboard, , asm/strings.asm:64
    90                          _hex_val_u_n                    = $01EA ; addr, local, , beanboard, , asm/strings.asm:56
    91                          _keyscanloop                    = $02EA ; addr, local, , beanboard, , asm/keymatrix.asm:27
    92                          _lcd_putchar_end                = $026C ; addr, local, , beanboard, , asm/HD44780LCD.asm:75
    93                          _lcd_putchar_eol3               = $0264 ; addr, local, , beanboard, , asm/HD44780LCD.asm:69
    94                          _lcd_putchar_pad                = $024D ; addr, local, , beanboard, , asm/HD44780LCD.asm:56
    95                          _lcd_putchar_printable          = $0259 ; addr, local, , beanboard, , asm/HD44780LCD.asm:63
    96                          _lcd_putcmd_loop                = $0234 ; addr, local, , beanboard, , asm/HD44780LCD.asm:24
    97                          _lcd_putdata                    = $026D ; addr, local, , beanboard, , asm/HD44780LCD.asm:80
    98                          _lcd_putdata_loop               = $026F ; addr, local, , beanboard, , asm/HD44780LCD.asm:84
    99                          _lcd_puts_end                   = $02D0 ; addr, local, , beanboard, , asm/HD44780LCD.asm:175
   100                          _lcd_puts_loop                  = $02C4 ; addr, local, , beanboard, , asm/HD44780LCD.asm:162
   101                          _lcd_scroll_clear_line          = $02B6 ; addr, local, , beanboard, , asm/HD44780LCD.asm:148
   102                          _lcd_scroll_clear_line_loop     = $02BB ; addr, local, , beanboard, , asm/HD44780LCD.asm:153
   103                          _lcd_scroll_line                = $029D ; addr, local, , beanboard, , asm/HD44780LCD.asm:119
   104                          _lcd_scroll_line_loop           = $029F ; addr, local, , beanboard, , asm/HD44780LCD.asm:125
   105                          _modifier_shift                 = $032C ; addr, local, , beanboard, , asm/keymatrix.asm:107
   106                          _putchar_beanboard              = $0057 ; addr, local, , beanboard, , asm/console.asm:49
   107                          _putchar_end                    = $0061 ; addr, local, , beanboard, , asm/console.asm:56
   108                          _putchar_hex_dgt                = $020B ; addr, local, , beanboard, , asm/strings.asm:91
   109                          _putchar_hex_n                  = $0215 ; addr, local, , beanboard, , asm/strings.asm:101
   110                          _putchar_usb                    = $005D ; addr, local, , beanboard, , asm/console.asm:53
   111                          _puts_end                       = $0072 ; addr, local, , beanboard, , asm/console.asm:88
   112                          _puts_loop                      = $0066 ; addr, local, , beanboard, , asm/console.asm:75
   113                          _readchar_beanboard             = $003B ; addr, local, , beanboard, , asm/console.asm:20
   114                          _readchar_end                   = $0043 ; addr, local, , beanboard, , asm/console.asm:25
   115                          _readchar_usb                   = $0040 ; addr, local, , beanboard, , asm/console.asm:23
   116                          _rowscan                        = $0312 ; addr, local, , beanboard, , asm/keymatrix.asm:71
   117                          _usb_no_char                    = $0098 ; addr, local, , beanboard, , asm/UM245R.asm:32
   118                          _usb_put                        = $00AA ; addr, local, , beanboard, , asm/UM245R.asm:49
   119                          _usb_put_loop                   = $00AC ; addr, local, , beanboard, , asm/UM245R.asm:53
   120                          _usb_puts_end                   = $00C4 ; addr, local, , beanboard, , asm/UM245R.asm:83
   121                          _usb_puts_loop                  = $00B8 ; addr, local, , beanboard, , asm/UM245R.asm:70
   122                          beanboard_console_init          = $0074 ; addr, local, , beanboard, , asm/console.asm:94
   123                          getchar                         = $0023 ; addr, local, , beanboard, , asm/console.asm:2
   124                          hex_byte_val                    = $01C0 ; addr, local, , beanboard, , asm/strings.asm:4
   125                          hex_val                         = $01E3 ; addr, local, , beanboard, , asm/strings.asm:48
   126                          key_readchar                    = $02D2 ; addr, local, , beanboard, , asm/keymatrix.asm:10
   127                          key_readchar_end                = $02FC ; addr, local, , beanboard, , asm/keymatrix.asm:43
   128                          lcd_getchar                     = $023F ; addr, local, , beanboard, , asm/HD44780LCD.asm:39
   129                          lcd_init                        = $021B ; addr, local, , beanboard, , asm/HD44780LCD.asm:2
   130                          lcd_putchar                     = $0248 ; addr, local, , beanboard, , asm/HD44780LCD.asm:51
   131                          lcd_putcmd                      = $0232 ; addr, local, , beanboard, , asm/HD44780LCD.asm:20
   132                          lcd_puts                        = $02C3 ; addr, local, , beanboard, , asm/HD44780LCD.asm:160
   133                          lcd_scroll                      = $027E ; addr, local, , beanboard, , asm/HD44780LCD.asm:102
   134                          modifierkeys                    = $031F ; addr, local, , beanboard, , asm/keymatrix.asm:95
   135                          putchar                         = $0045 ; addr, local, , beanboard, , asm/console.asm:37
   136                          putchar_hex                     = $01F4 ; addr, local, , beanboard, , asm/strings.asm:70
   137                          puts                            = $0065 ; addr, local, , beanboard, , asm/console.asm:73
   138                          readchar                        = $002B ; addr, local, , beanboard, , asm/console.asm:10
   139                          usb_putchar                     = $009B ; addr, local, , beanboard, , asm/UM245R.asm:36
   140                          usb_puts                        = $00B7 ; addr, local, , beanboard, , asm/UM245R.asm:68
   141                          usb_readchar                    = $008A ; addr, local, , beanboard, , asm/UM245R.asm:16
   142                          
beanboard.asm:
     2                          ORG ORGDEF
     3                          include "main.asm"
main.asm:
     1                          start:
     2  0000  215b00                ld hl,CONSOLE_MESSAGE
     3  0003  cd6500                call puts
     4                          
     5                          keyscanstart:
     6                              ; initial row bit - only 1 bit is ever set at a time - it is shifted iteratively from bit 0 to bit 7
     7  0006  0601                  ld b,0b00000001
     8                              ; location of previous values
     9  0008  217400                ld hl,KEY_BUFFER
    10                          keyscanloop:
    11                              ; get the current row bit
    12  000b  78                    ld a,b
    13  000c  cd3900                call keyscan
    14  000f  fe00                  cp 0
    15                              ; no value - skip printing the value
    16  0011  280e                  jr z,keyscannext
    17                          
    18                              ; print the row and column as hex
    19                              ; stash the column value in C
    20  0013  4f                    ld c,a
    21                              ; get the row value
    22  0014  78                    ld a,b
    23                              ; print the row value
    24  0015  cdf401                call putchar_hex
    25                              ; restore the column value
    26  0018  79                    ld a,c
    27                              ; print the column value
    28  0019  cdf401                call putchar_hex
    29                              ; add a newline
    30  001c  3e0a                  ld a,'\n'
    31  001e  cd4500                call putchar
    32                          
    33                          keyscannext:
    34                              ; move the pointer of previous values to the next row slot
    35  0021  23                    inc hl
    36                              ; clear the carry flag
    37  0022  b7                    or a
    38                              ; shift column bit left - when we've done all 8, the bit will move into the carry flag
    39  0023  cb10                  rl b
    40                              ; loop if not done all columns (carry flag means we've already done all 8 bits)
    41  0025  30e4                  jr nc,keyscanloop
    42                              ; key debounce
    43  0027  cd4900                call mydelay
    44                              ; check if user wants to quit - looking for input from USB
    45  002a  cd2b00                call readchar
    46                              ; escape?
    47  002d  fe1b                  cp '\e'
    48                              ; no - loop again
    49  002f  20d5                  jr nz,keyscanstart
    50                              ; yes - quit
    51                          end:
    52                              ; add a line break to the output
    53  0031  3e0a                  ld a,'\n'
    54  0033  cd4500                call putchar
    55                              ; jump to the reset address - will drop back to the monitor
    56  0036  c31000                jp WARMSTART
    57                          
    58                          
    59                          ; subroutines
    60                          
    61                          ; A contains column bit, HL contains a pointer to the old value, return value in A
    62                          keyscan:
    63                              ; preserve bc
    64  0039  c5                    push bc
    65                              ; output column strobe
    66  003a  d302                  out (KEYSCAN_OUT),a
    67                              ; get row values
    68  003c  db03                  in a,(KEYSCAN_IN)
    69                              ; fetch previous value for comparison
    70  003e  46                    ld b,(hl)
    71                              ; is the value unchanged?
    72  003f  b8                    cp b
    73                              ; yes - value hasn't changed
    74  0040  2803                  jr z,_keyscansame
    75                              ; no - store the new value
    76  0042  77                    ld (hl),a
    77                              ; restore bc
    78  0043  c1                    pop bc
    79  0044  c9                    ret
    80                          _keyscansame:
    81                              ; when data hasn't changed we will return 0
    82  0045  3e00                  ld a,0
    83                              ; restore bc
    84  0047  c1                    pop bc
    85  0048  c9                    ret
    86                          
    87                          ; TODO - use the monitor delay ?
    88                          
    89                          mydelay:
    90                              ; preserve hl
    91  0049  e5                    push hl
    92                              ; set hl to the length of the delay
    93  004a  21000a                ld hl,0x0a00
    94                          _mydelayloop:
    95                              ; count down the time
    96  004d  2b                    dec hl
    97                              ; wait a few cycles
    98  004e  00                    nop
    99                              ; copy the high part of the count down
   100  004f  7c                    ld a,h
   101                              ; is it zero?
   102  0050  fe00                  cp 0
   103                              ; no - loop again
   104  0052  20f9                  jr nz,_mydelayloop
   105                              ; yes - what about the low part of the value?
   106  0054  7d                    ld a,l
   107                              ; is it zero?
   108  0055  fe00                  cp 0
   109                              ; no - loop again
   110  0057  20f4                  jr nz,_mydelayloop
   111                              ; yes - return
   112                              ; restore hl
   113  0059  e1                    pop hl
   114  005a  c9                    ret
   115                          
   116                          
   117                          ; messages
   118                          
   119                          CONSOLE_MESSAGE:
   120  005b  4869742045736320      db "Hit Esc to stop keyscan\n",0
              746f2073746f7020  
              6b65797363616e0a  
              00                
   121                          
   122                          
   123                          ; variables
   124                          
   125                          KEY_BUFFER:
   126  0074  0000000000000000      db 0,0,0,0,0,0,0,0
   127                          
beanboard.asm:
     4                          
